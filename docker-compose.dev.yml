version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: helpboard
      POSTGRES_USER: helpboard_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-helpboard_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U helpboard_user -d helpboard"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Session Storage
  redis:
    image: redis:7-alpine
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # HelpBoard Application (Development Mode)
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    restart: always
    environment:
      NODE_ENV: development
      PORT: 5000
      DATABASE_URL: postgresql://helpboard_user:${DB_PASSWORD:-helpboard_password}@db:5432/helpboard
      REDIS_URL: redis://default:${REDIS_PASSWORD:-redis_password}@redis:6379
      SESSION_SECRET: ${SESSION_SECRET:-helpboard_session_secret_dev}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      CORS_ORIGIN: https://${DOMAIN:-helpboard.selfany.com}
      TRUST_PROXY: "true"
    ports:
      - "5000:5000"
    volumes:
      - ./logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
  
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    restart: always
    depends_on:
      - app
    volumes:
      - frontend_build:/app/dist

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - frontend_build:/usr/share/nginx/html:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./certbot/www:/var/www/certbot:ro
    depends_on:
      - app
      - frontend
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Certbot for SSL certificates
  certbot:
    image: certbot/certbot:latest
    profiles: ["ssl-setup"]
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email admin@${DOMAIN:-helpboard.selfany.com} --agree-tos --no-eff-email -d ${DOMAIN:-helpboard.selfany.com}

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  frontend_build:
    driver: local